pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhubpat')
        IMAGE_NAME = 'raparna154/inji-verify-service:latest'
        GIT_BRANCH = 'test' 
    }
    stages {

        stage('Clean Workspace') {
            steps {
                sh 'rm -rf e2e_inji_verify || true'
            }
        }

        stage('Checkout') {
            steps {
                    git branch: 'test',
                    url: 'https://github.com/pkumarmshetty/e2e_inji_verify.git',
                    credentialsId: 'githubpat2'
                    sh '''
                    cd e2e_inji_verify
                    '''
            }
        }

        //stage('Checkout') {
            //withCredentials([usernamePassword(credentialsId: 'githubpat2', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
                // Replace with your repository URL
                //git url: 'https://github.com/pkumarmshetty/e2e_inji_verify.git', branch: 'test'
            //}
        //}
         //stage('Build with Maven') {
           // steps {
                // Run Maven build using shell command
                //sh 'mvn -U -B clean package'
            //}
        //}
        stage('Build Docker Image') {
            steps {
                script {
                    dir('e2e_inji_verify/ui') {
                        sh """
                        docker build -t $DOCKER_IMAGE .
                        """
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
                        dockerImage.push()
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}